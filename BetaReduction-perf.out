---------- run perl6-m ----------
1..7
# CurryStats: ( 0p,      0f,  0o,    0+0i)

# (λf.λa.λb.f b a) (B (C cons) (C cons nil))  =  (λf.λa.λb.f b a) ((λf.λg.λx.f (g x)) ((λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2)) ((λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2) (λh.λ_.h)))
#     =_β0   (λf.λa.λb.f b a) ((λf.λg.λx.f (g x)) ((λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2)) ((λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2) (λh.λ_.h)))
#     =_β1   λa.λb.(λf.λg.λx.f (g x)) ((λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2)) ((λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2) (λh.λ_.h)) b a
#     =_β2   λa.λb.(λg.λx.(λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2) (g x)) ((λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2) (λh.λ_.h)) b a
#     =_β3   λa.λb.(λx.(λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2) ((λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2) (λh.λ_.h) x)) b a
#     =_β4   λa.λb.(λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2) ((λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2) (λh.λ_.h) b) a
#     =_β5   λa.λb.(λx.λy.(λf1.λf2.λ_.λh.h f1 f2) y x) ((λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2) (λh.λ_.h) b) a
#     =_β6   λa.λb.(λy.(λf1.λf2.λ_.λh.h f1 f2) y ((λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2) (λh.λ_.h) b)) a
#     =_β7   λa.λb.(λf1.λf2.λ_.λh.h f1 f2) a ((λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2) (λh.λ_.h) b)
#     =_β8   λa.λb.(λf2.λ_.λh.h a f2) ((λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2) (λh.λ_.h) b)
#     =_β9   λa.λb.λ_.λh.h a ((λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2) (λh.λ_.h) b)
#     =_β10  λa.λb.λ_.λh.h a ((λx.λy.(λf1.λf2.λ_.λh.h f1 f2) y x) (λh.λ_.h) b)
#     =_β11  λa.λb.λ_.λh.h a ((λy.(λf1.λf2.λ_.λh.h f1 f2) y (λh.λ_.h)) b)
#     =_β12  λa.λb.λ_.λh.h a ((λf1.λf2.λ_.λh.h f1 f2) b (λh.λ_.h))
#     =_β13  λa.λb.λ_.λh.h a ((λf2.λ_.λh.h b f2) (λh.λ_.h))
#     =_β14  λa.λb.λ_.λh.h a (λ_.λh.h b (λh.λ_.h))
#     (14 steps)
# λa.λb.cons a (cons b nil)  =  λa.λb.(λf1.λf2.λ_.λh.h f1 f2) a ((λf1.λf2.λ_.λh.h f1 f2) b (λh.λ_.h))
#     =_β0   λa.λb.(λf1.λf2.λ_.λh.h f1 f2) a ((λf1.λf2.λ_.λh.h f1 f2) b (λh.λ_.h))
#     =_β1   λa.λb.(λf2.λ_.λh.h a f2) ((λf1.λf2.λ_.λh.h f1 f2) b (λh.λ_.h))
#     =_β2   λa.λb.λ_.λh.h a ((λf1.λf2.λ_.λh.h f1 f2) b (λh.λ_.h))
#     =_β3   λa.λb.λ_.λh.h a ((λf2.λ_.λh.h b f2) (λh.λ_.h))
#     =_β4   λa.λb.λ_.λh.h a (λ_.λh.h b (λh.λ_.h))
#     (4 steps)
# 10.70 = 8.63 + 2.08 sec (81% + 19%) consumed for beta-reduction
ok 1 - (λf.λa.λb.f b a) (B (C cons) (C cons nil))  =_β*  λa.λb.cons a (cons b nil)  [NO alpha-conv needed]
# (C (B (C cons) (C cons nil)))  =  (λf.λx.λy.f y x) ((λf.λg.λx.f (g x)) ((λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2)) ((λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2) (λh.λ_.h)))
#     =_β0   (λf.λx.λy.f y x) ((λf.λg.λx.f (g x)) ((λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2)) ((λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2) (λh.λ_.h)))
#     =_β1   λx.λy.(λf.λg.λx.f (g x)) ((λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2)) ((λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2) (λh.λ_.h)) y x
#     =_β2   λx.λy.(λg.λx.(λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2) (g x)) ((λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2) (λh.λ_.h)) y x
#     =_β3   λx.λy.(λx.(λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2) ((λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2) (λh.λ_.h) x)) y x
#     =_β4   λx.λy.(λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2) ((λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2) (λh.λ_.h) y) x
#     =_β5   λx.λy.(λx.λy.(λf1.λf2.λ_.λh.h f1 f2) y x) ((λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2) (λh.λ_.h) y) x
#     =_β6   λx.λy.(λα1.(λf1.λf2.λ_.λh.h f1 f2) α1 ((λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2) (λh.λ_.h) y)) x
#     =_β7   λx.λy.(λf1.λf2.λ_.λh.h f1 f2) x ((λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2) (λh.λ_.h) y)
#     =_β8   λx.λy.(λf2.λ_.λh.h x f2) ((λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2) (λh.λ_.h) y)
#     =_β9   λx.λy.λ_.λh.h x ((λf.λx.λy.f y x) (λf1.λf2.λ_.λh.h f1 f2) (λh.λ_.h) y)
#     =_β10  λx.λy.λ_.λh.h x ((λx.λy.(λf1.λf2.λ_.λh.h f1 f2) y x) (λh.λ_.h) y)
#     =_β11  λx.λy.λ_.λh.h x ((λy.(λf1.λf2.λ_.λh.h f1 f2) y (λh.λ_.h)) y)
#     =_β12  λx.λy.λ_.λh.h x ((λf1.λf2.λ_.λh.h f1 f2) y (λh.λ_.h))
#     =_β13  λx.λy.λ_.λh.h x ((λf2.λ_.λh.h y f2) (λh.λ_.h))
#     =_β14  λx.λy.λ_.λh.h x (λ_.λh.h y (λh.λ_.h))
#     (14 steps)
# λx.λy.cons x (cons y nil)  =  λx.λy.(λf1.λf2.λ_.λh.h f1 f2) x ((λf1.λf2.λ_.λh.h f1 f2) y (λh.λ_.h))
#     =_β0   λx.λy.(λf1.λf2.λ_.λh.h f1 f2) x ((λf1.λf2.λ_.λh.h f1 f2) y (λh.λ_.h))
#     =_β1   λx.λy.(λf2.λ_.λh.h x f2) ((λf1.λf2.λ_.λh.h f1 f2) y (λh.λ_.h))
#     =_β2   λx.λy.λ_.λh.h x ((λf1.λf2.λ_.λh.h f1 f2) y (λh.λ_.h))
#     =_β3   λx.λy.λ_.λh.h x ((λf2.λ_.λh.h y f2) (λh.λ_.h))
#     =_β4   λx.λy.λ_.λh.h x (λ_.λh.h y (λh.λ_.h))
#     (4 steps)
# 11.64 = 9.59 + 2.05 sec (82% + 18%) consumed for beta-reduction
ok 2 - (C (B (C cons) (C cons nil)))  =_β*  λx.λy.cons x (cons y nil)  [DOES need alpha-conv]
#     =_β0   (x x)
#     (0 steps)
#     =_β0   (x x)
#     (0 steps)
# 0.09 = 0.05 + 0.05 sec (50% + 50%) consumed for beta-reduction
ok 3 - (x x)  =_β*  (x x)  (sanity check)
#     =_β0   (λx.x) x
#     =_β1   x
#     (1 steps)
#     =_β0   x
#     (0 steps)
# 0.14 = 0.11 + 0.03 sec (78% + 22%) consumed for beta-reduction
ok 4 - (λx.x) x  =_β*  x  (sanity check)
# 0.23 sec consumed for big-term construction
ok 5 - $bigTerm.lambda is λf1.λf2.λf3.λf4.λf5.(λy.λ_.y) ((λg.λh.(λy.λ_.y) (g h)) ((λg.λh.(λy.λ_.y) (g h)) (λk.(λk.(λk.(λk.(λk.(λx.x) k f1) k f2) k f3) k f4) k f5)))
ok 6 - $expectedTerm.lambda is λf1.λf2.λf3.λf4.λf5.λ_.λh.λ_.λ_.h f1 f2 f3 f4 f5
# CurryStats: ( 0p,   6300f,  0o,  513+0i)
#  1048 (  1):          free-varName? => ( 0p,   1048f,  0o,    0+ 0i :(Str -> TTerm -> TBool))
#   927 (  1):                Str-eq? => ( 0p,    927f,  0o,    0+ 0i :(Str -> Str -> TBool))
#   863 (  1):                 #false => ( 0p,    863f,  0o,    0+ 0i TBool:(Mu -> Mu -> Mu))
#   273 (  1):           betaContract => ( 0p,    273f,  0o,    0+ 0i :(TTerm -> Mu))
#   230 (  1):                   Some => ( 0p,    230f,  0o,    0+ 0i :(Mu -> Mu))
#   195 (  1):                  #true => ( 0p,    195f,  0o,    0+ 0i TBool:(Mu -> Mu -> Mu))
#   181 (  1):     subst-alpha_direct => ( 0p,    181f,  0o,    0+ 0i :(Str -> TTerm -> TTerm -> TTerm))
#   158 (  1):                   LamT => ( 0p,    158f,  0o,    0+ 0i :(Str -> TTerm -> TTerm))
#   145 (  1):          <<Aka+TTerm>> => ( 0p,    145f,  0o,    0+ 0i Aka+TTerm:(Callable -> Callable -> Callable -> Callable -> Mu))
#   122 (  1):                   None => ( 0p,    122f,  0o,    0+ 0i TMaybe:(Mu -> Mu -> Mu))
#   120 (  1):                   AppT => ( 0p,    120f,  0o,    0+ 0i :(TTerm -> TTerm -> TTerm))
#    85 (  1):      subst-alpha_Maybe => ( 0p,     85f,  0o,    0+ 0i :(Str -> TTerm -> TTerm -> TMaybe))
#    79 (  4):          <<Aka+TTerm>> => ( 0p,     79f,  0o,    0+ 0i Aka+TTerm:(Callable -> Callable -> Callable -> Callable -> Mu)),
#                       <<Aka+TTerm>> => ( 0p,     79f,  0o,    0+ 0i Aka+TTerm:(Callable -> Callable -> Callable -> Callable -> Mu)),
#                       <<Aka+TTerm>> => ( 0p,     79f,  0o,    0+ 0i Aka+TTerm:(Callable -> Callable -> Callable -> Callable -> Mu)),
#                       <<Aka+TTerm>> => ( 0p,     79f,  0o,    0+ 0i Aka+TTerm:(Callable -> Callable -> Callable -> Callable -> Mu))
#    75 (  1):              <<TTerm>> => ( 0p,     75f,  0o,    0+ 0i TTerm:(Callable -> Callable -> Callable -> Callable -> Mu))
#    71 (  2):              <<TTerm>> => ( 0p,     71f,  0o,    0+ 0i TTerm:(Callable -> Callable -> Callable -> Callable -> Mu)),
#                           <<TTerm>> => ( 0p,     71f,  0o,    0+ 0i TTerm:(Callable -> Callable -> Callable -> Callable -> Mu))
#    66 (  1):          <<Aka+TTerm>> => ( 0p,     66f,  0o,    0+ 0i Aka+TTerm:(Callable -> Callable -> Callable -> Callable -> Mu))
#    64 (  1):              <<TTerm>> => ( 0p,     64f,  0o,    0+ 0i TTerm:(Callable -> Callable -> Callable -> Callable -> Mu))
#    52 (  1):          <<Aka+TTerm>> => ( 0p,     52f,  0o,    0+ 0i Aka+TTerm:(Callable -> Callable -> Callable -> Callable -> Mu))
#     5 (  1): subst-par-alpha_direct => ( 0p,      5f,  0o,    0+ 0i :(TList -> TTerm -> TTerm))
#     2 (  3):                    nil => ( 0p,      2f,  0o,    0+ 0i TList:(Mu -> Mu -> Mu)),
#                                VarT => ( 0p,      2f,  0o,    0+ 0i :(Str -> TTerm)),
#                                cons => ( 0p,      2f,  0o,    0+ 0i :(Mu -> TList -> TList))
#     =_β0   λf1.λf2.λf3.λf4.λf5.(λy.λ_.y) ((λg.λh.(λy.λ_.y) (g h)) ((λg.λh.(λy.λ_.y) (g h)) (λk.(λk.(λk.(λk.(λk.(λx.x) k f1) k f2) k f3) k f4) k f5)))
#     =_β1   λf1.λf2.λf3.λf4.λf5.λ_.(λg.λh.(λy.λ_.y) (g h)) ((λg.λh.(λy.λ_.y) (g h)) (λk.(λk.(λk.(λk.(λk.(λx.x) k f1) k f2) k f3) k f4) k f5))
#     =_β2   λf1.λf2.λf3.λf4.λf5.λ_.λh.(λy.λ_.y) ((λg.λh.(λy.λ_.y) (g h)) (λk.(λk.(λk.(λk.(λk.(λx.x) k f1) k f2) k f3) k f4) k f5) h)
#     =_β3   λf1.λf2.λf3.λf4.λf5.λ_.λh.λ_.(λg.λh.(λy.λ_.y) (g h)) (λk.(λk.(λk.(λk.(λk.(λx.x) k f1) k f2) k f3) k f4) k f5) h
#     =_β4   λf1.λf2.λf3.λf4.λf5.λ_.λh.λ_.(λh.(λy.λ_.y) ((λk.(λk.(λk.(λk.(λk.(λx.x) k f1) k f2) k f3) k f4) k f5) h)) h
#     =_β5   λf1.λf2.λf3.λf4.λf5.λ_.λh.λ_.(λy.λ_.y) ((λk.(λk.(λk.(λk.(λk.(λx.x) k f1) k f2) k f3) k f4) k f5) h)
#     =_β6   λf1.λf2.λf3.λf4.λf5.λ_.λh.λ_.λ_.(λk.(λk.(λk.(λk.(λk.(λx.x) k f1) k f2) k f3) k f4) k f5) h
#     =_β7   λf1.λf2.λf3.λf4.λf5.λ_.λh.λ_.λ_.(λk.(λk.(λk.(λk.(λx.x) k f1) k f2) k f3) k f4) h f5
#     =_β8   λf1.λf2.λf3.λf4.λf5.λ_.λh.λ_.λ_.(λk.(λk.(λk.(λx.x) k f1) k f2) k f3) h f4 f5
#     =_β9   λf1.λf2.λf3.λf4.λf5.λ_.λh.λ_.λ_.(λk.(λk.(λx.x) k f1) k f2) h f3 f4 f5
#     =_β10  λf1.λf2.λf3.λf4.λf5.λ_.λh.λ_.λ_.(λk.(λx.x) k f1) h f2 f3 f4 f5
#     =_β11  λf1.λf2.λf3.λf4.λf5.λ_.λh.λ_.λ_.(λx.x) h f1 f2 f3 f4 f5
#     =_β12  λf1.λf2.λf3.λf4.λf5.λ_.λh.λ_.λ_.h f1 f2 f3 f4 f5
#     (12 steps)
#     =_β0   λf1.λf2.λf3.λf4.λf5.λ_.λh.λ_.λ_.h f1 f2 f3 f4 f5
#     (0 steps)
# 9.25 = 9.00 + 0.25 sec (97% + 3%) consumed for beta-reduction
ok 7 - λf1.λf2.λf3.λf4.λf5.(λy.λ_.y) ((λg.λh.(λy.λ_.y) (g h)) ((λg.λh.(λy.λ_.y) (g h)) (λk.(λk.(λk.(λk.(λk.(λx.x) k f1) k f2) k f3) k f4) k f5)))  =_β*  λf1.λf2.λf3.λf4.λf5.λ_.λh.λ_.λ_.h f1 f2 f3 f4 f5  
# CurryStats: ( 0p,   8077f,  0o,  794+0i)
#  1265 (  1):          free-varName? => ( 0p,   1265f,  0o,    0+ 0i :(Str -> TTerm -> TBool))
#  1101 (  1):                Str-eq? => ( 0p,   1101f,  0o,    0+ 0i :(Str -> Str -> TBool))
#  1028 (  1):                 #false => ( 0p,   1028f,  0o,    0+ 0i TBool:(Mu -> Mu -> Mu))
#   435 (  1):           betaContract => ( 0p,    435f,  0o,    0+ 0i :(TTerm -> Mu))
#   378 (  1):                   Some => ( 0p,    378f,  0o,    0+ 0i :(Mu -> Mu))
#   259 (  1):                   LamT => ( 0p,    259f,  0o,    0+ 0i :(Str -> TTerm -> TTerm))
#   222 (  1):                  #true => ( 0p,    222f,  0o,    0+ 0i TBool:(Mu -> Mu -> Mu))
#   194 (  1):     subst-alpha_direct => ( 0p,    194f,  0o,    0+ 0i :(Str -> TTerm -> TTerm -> TTerm))
#   170 (  1):                   None => ( 0p,    170f,  0o,    0+ 0i TMaybe:(Mu -> Mu -> Mu))
#   155 (  1):          <<Aka+TTerm>> => ( 0p,    155f,  0o,    0+ 0i Aka+TTerm:(Callable -> Callable -> Callable -> Callable -> Mu))
#   152 (  1):                   AppT => ( 0p,    152f,  0o,    0+ 0i :(TTerm -> TTerm -> TTerm))
#   121 (  1):      subst-alpha_Maybe => ( 0p,    121f,  0o,    0+ 0i :(Str -> TTerm -> TTerm -> TMaybe))
#    88 (  2):          <<Aka+TTerm>> => ( 0p,     88f,  0o,    0+ 0i Aka+TTerm:(Callable -> Callable -> Callable -> Callable -> Mu)),
#                       <<Aka+TTerm>> => ( 0p,     88f,  0o,    0+ 0i Aka+TTerm:(Callable -> Callable -> Callable -> Callable -> Mu))
#    81 (  2):          <<Aka+TTerm>> => ( 0p,     81f,  0o,    0+ 0i Aka+TTerm:(Callable -> Callable -> Callable -> Callable -> Mu)),
#                       <<Aka+TTerm>> => ( 0p,     81f,  0o,    0+ 0i Aka+TTerm:(Callable -> Callable -> Callable -> Callable -> Mu))
#    75 (  2):              <<TTerm>> => ( 0p,     75f,  0o,    0+ 0i TTerm:(Callable -> Callable -> Callable -> Callable -> Mu)),
#                       <<Aka+TTerm>> => ( 0p,     75f,  0o,    0+ 0i Aka+TTerm:(Callable -> Callable -> Callable -> Callable -> Mu))
#    71 (  2):              <<TTerm>> => ( 0p,     71f,  0o,    0+ 0i TTerm:(Callable -> Callable -> Callable -> Callable -> Mu)),
#                           <<TTerm>> => ( 0p,     71f,  0o,    0+ 0i TTerm:(Callable -> Callable -> Callable -> Callable -> Mu))
#    64 (  1):              <<TTerm>> => ( 0p,     64f,  0o,    0+ 0i TTerm:(Callable -> Callable -> Callable -> Callable -> Mu))
#    63 (  1):          <<Aka+TTerm>> => ( 0p,     63f,  0o,    0+ 0i Aka+TTerm:(Callable -> Callable -> Callable -> Callable -> Mu))
#     5 (  1): subst-par-alpha_direct => ( 0p,      5f,  0o,    0+ 0i :(TList -> TTerm -> TTerm))
#     2 (  3):                    nil => ( 0p,      2f,  0o,    0+ 0i TList:(Mu -> Mu -> Mu)),
#                                VarT => ( 0p,      2f,  0o,    0+ 0i :(Str -> TTerm)),
#                                cons => ( 0p,      2f,  0o,    0+ 0i :(Mu -> TList -> TList))

Output completed (1 min 14 sec consumed) - Normal Termination